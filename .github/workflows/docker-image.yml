name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      #run: docker pull juliennoblet/download-geofabrik:v2.5.0 && docker run --rm -v $PWD:/data juliennoblet/download-geofabrik download --osm.pbf shikoku
      run: export aria=shikoku && wget https://github.com/mikefarah/yq/releases/download/v4.13.4/yq_linux_386 -O yq && chmod +x yq && wget https://github.com/julien-noblet/download-geofabrik/releases/download/v2.5.0/download-geofabrik_2.5.0_Linux_x86_64.tar.gz && tar vxfz ./download-geofabrik_2.5.0_Linux_x86_64.tar.gz && ./download-geofabrik download $aria && git clone https://github.com/openmaptiles/openmaptiles.git && cd openmaptiles && mkdir -p data && cp ../$aria.osm.pbf ./data && ls -l ~/ && cp ~/my-postgres.conf ./ && yq e '.services.postgres.volumes += ["- ./my-postgres.conf:/etc/postgresql/postgresql.conf"]' docker-compose.yml && yq e '.services.postgres.command += ["postgres -c ''config_file=/etc/postgresql/postgresql.conf''"]' docker-compose.yml && ./quickstart.sh $aria

